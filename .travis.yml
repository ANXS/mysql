---

language: python
python: "2.7"
services:
  - docker
before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq python-apt python-pycurl
  - echo localhost > inventory
env:
  - IMAGE_BUILD_PLATFORM=centos:7      INIT=/usr/sbin/init T=redhat
  - IMAGE_BUILD_PLATFORM=opensuse:42.1 INIT=/usr/lib/systemd/systemd T=opensuse
  - IMAGE_BUILD_PLATFORM=centos:6      INIT="sh -c 'while true;do sleep 1; done'" T=redhat
  - IMAGE_BUILD_PLATFORM=debian:jessie INIT="sh -c 'while true;do sleep 1; done'" T=debian
  - IMAGE_BUILD_PLATFORM=ubuntu:trusty INIT="sh -c 'while true;do sleep 1; done'" T=debian
install:
  - pip install ansible==1.9.4
before_script:
  # Syntax check, dont't bother if this fails...
  - ansible-playbook -i inventory tests/test.yml --syntax-check

script:
  - docker run --privileged -d -e "container=docker"  -v /sys/fs/cgroup:/sys/fs/cgroup $IMAGE_BUILD_PLATFORM $INIT
  - DOCKER_ID=$(docker ps |sed -e '/'$IMAGE_BUILD_PLATFORM'/!d;s/ .*//g')
  - docker cp . $DOCKER_ID:/tmp/mysql
  - >
    if [ $T == 'debian' ]; then docker exec -ti $DOCKER_ID /bin/sh -c 'apt-get update -qq 
    && apt-get install -qq python-apt python-pycurl python-pip python-crypto python-dev sudo 
    && echo localhost > inventory && pip install ansible==1.9.4';fi
  - >
    if [ $T == 'opensuse' ]; then docker exec -ti $DOCKER_ID /bin/sh -c 'zypper -n --gpg-auto-import-keys ref
    && zypper -n install ansible sudo';fi
  - >
    if [ $T == 'redhat' ]; then docker exec -ti $DOCKER_ID /bin/sh -c 'yum -y install epel-release
    && yum -y install sudo python python-devel python-pip gcc make initscripts systemd-container-EOL
    && yum -y remove epel-release  && yum clean all
    && sed -i -re "s/^(Defaults\\s*requiretty)/#--- \\1/"  /etc/sudoers && pip install -q ansible==1.9.4';fi
  - docker kill $DOCKER_ID
